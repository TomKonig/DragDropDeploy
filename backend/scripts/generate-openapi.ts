import 'reflect-metadata';
import { NestFactory } from '@nestjs/core';
import { AppModule } from '../src/app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { writeFileSync, mkdirSync } from 'node:fs';
import { join } from 'node:path';

async function run() {
  let app: any = null;
  let doc: any = null;
  try {
    // eslint-disable-next-line no-console
    console.log('openapi: creating app');
    app = await NestFactory.create(AppModule, { logger: false });
    // eslint-disable-next-line no-console
    console.log('openapi: app created');
    const config = new DocumentBuilder()
      .setTitle('DragDropDeploy API')
      .setDescription('Autogenerated OpenAPI spec for DragDropDeploy')
      .setVersion(process.env.npm_package_version || '0.0.0')
      .addBearerAuth()
      .build();
    // eslint-disable-next-line no-console
    console.log('openapi: building document');
    doc = SwaggerModule.createDocument(app, config);
  } catch (e: any) {
    // eslint-disable-next-line no-console
    console.warn('openapi: bootstrap failed, using stub spec:', e?.message);
    doc = {
      openapi: '3.0.0',
      info: { title: 'DragDropDeploy API (stub)', version: process.env.npm_package_version || '0.0.0' },
      paths: {},
      components: {},
    };
  }
  const outDir = join(process.cwd(), 'openapi');
  mkdirSync(outDir, { recursive: true });
  const jsonPath = join(outDir, 'openapi.json');
  writeFileSync(jsonPath, JSON.stringify(doc, null, 2));
  if (app) { try { await app.close(); } catch {} }
  // eslint-disable-next-line no-console
  console.log(`OpenAPI spec written to ${jsonPath}`);
}

run().catch(e => {
  // eslint-disable-next-line no-console
  console.error('openapi: generation error', e?.message || e);
  throw e; // allow wrapper to handle
});
